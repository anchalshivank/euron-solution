version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: referral_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql  # Mount SQL script
    ports:
      - "5432:5432"
    networks:
      - app-network


  # Referral Generation Service
  referral-generation-service:
    build:
      context: ./backend/referral-generation-service
    container_name: referral-generation-service

    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/referral_db
      - RUST_LOG=INFO
      - SERVER_ADDR=0.0.0.0
      - SERVER_PORT=8081
    depends_on:
      - postgres
    ports:
      - "8081:8081"
    networks:
      - app-network

  # Referral Query Service
  referral-query-service:
    build:
      context: ./backend/referral-query-service
    container_name: referral-query-service

    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/referral_db
      - RUST_LOG=INFO
      - SERVER_ADDR=0.0.0.0
      - SERVER_PORT=8082
    depends_on:
      - postgres
    ports:
      - "8082:8082"
    networks:
      - app-network

  # Referral Claiming Service
  referral-claiming-service:
    build:
      context: ./backend/referral-claiming-service
    container_name: referral-claiming-service

    environment:
      - DATABASE_URL=postgres://user:password@postgres:5432/referral_db
      - RUST_LOG=INFO
      - SERVER_ADDR=0.0.0.0
      - SERVER_PORT=8083
    depends_on:
      - postgres
    ports:
      - "8083:8083"
    networks:
      - app-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend/euron-presale
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - referral-generation-service
      - referral-query-service
      - referral-claiming-service
    networks:
      - app-network

# Define Networks
networks:
  app-network:
    driver: bridge

# Define Volumes
volumes:
  postgres_data:
